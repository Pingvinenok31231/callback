def handle_signal(signal):
    if signal == 'addUser':
        user_id = signal['user_id']
        chat = signal['chat']
        source = signal.get('source', 'беседа')
        # Обработка сигнала addUser
        print(f"Добавление пользователя {user_id} в чат {chat}. Источник: {source}")

    elif signal == 'banExpired':
        user_id = signal['user_id']
        chat = signal['chat']
        comment = signal['comment']
        conversation_message_id = signal['conversation_message_id']
        # Обработка сигнала banExpired
        print(f"Истек срок блокировки пользователя {user_id} в чате {chat}. Комментарий: {comment}. ID сообщения: {conversation_message_id}")

    elif signal == 'banGetReason':
        chat = signal['chat']
        local_id = signal['local_id']
        message = signal['message']
        # Обработка сигнала banGetReason
        print(f"Получена причина блокировки в чате {chat} для сообщения с локальным ID {local_id}. Сообщение: {message}")

    elif signal == 'bindChat':
        chat = signal['chat']
        # Обработка сигнала bindChat
        print(f"Привязка чата {chat}")

    elif signal == 'deleteMessagesFromUser':
        chat = signal['chat']
        user_id = signal.get('user_id')
        member_ids = signal.get('member_ids')
        amount = signal.get('amount')
        is_spam = signal.get('is_spam')
        silent = signal.get('silent')
        # Обработка сигнала deleteMessagesFromUser
        if user_id:
            print(f"Удаление сообщений от пользователя {user_id} в чате {chat}")
        elif member_ids:
            print(f"Удаление сообщений от участников {member_ids} в чате {chat}")
        else:
            print(f"Удаление сообщений в чате {chat}")
        if amount:
            print(f"Количество сообщений: {amount}")
        if is_spam:
            print("Удаление помеченных как спам")
        if silent:
            print("Удаление без уведомлений")

    elif signal == 'deleteMessages':
        chat = signal['chat']
        local_ids = signal['local_ids']
        is_spam = signal['is_spam']
        silent = signal['silent']
        # Обработка сигнала deleteMessages
        print(f"Удаление сообщений в чате {chat}")
        print(f"Локальные ID сообщений: {local_ids}")
        if is_spam:
            print("Удаление помеченных как спам")
        if silent:
            print("Удаление без уведомлений")

    elif signal == 'forbiddenLinks':
        chat = signal['chat']
        local_ids = signal['local_ids']
        # Обработка сигнала forbiddenLinks
        print(f"Запрещенные ссылки в чате {chat}")
        print(f"Локальные ID сообщений: {local_ids}")

    elif signal == 'ping':
        # Обработка сигнала ping
        print("Получен сигнал ping")

    elif signal == 'printBookmark':
        chat = signal['chat']
        conversation_message_id = signal['conversation_message_id']
        description = signal['description']
        # Обработка сигнала printBookmark
        print(f"Печать закладки в чате {chat}")
        print(f"ID сообщения: {conversation_message_id}")
        print(f"Описание: {description}")

    elif signal == 'subscribeSignals':
        chat = signal['chat']
        conversation_message_id = signal['conversation_message_id']
        text = signal['text']
        from_id = signal['from_id']
        # Обработка сигнала subscribeSignals
        print(f"Подписка на сигналы в чате {chat}")
        print(f"ID сообщения: {conversation_message_id}")
        print(f"Текст: {text}")
        print(f"Отправитель: {from_id}")

    elif signal == 'toGroup':
        chat = signal['chat']
        group_id = signal['group_id']
        local_id = signal['local_id']
        # Обработка сигнала toGroup
        print(f"Пересылка сообщения из чата {chat} в группу {group_id}. Локальный ID: {local_id}")

    elif signal == 'sendSignal':
        chat = signal['chat']
        from_id = signal['from_id']
        value = signal['value']
        conversation_message_id = signal['conversation_message_id']
        # Обработка сигнала sendSignal
        print(f"Отправка сигнала в чат {chat}")
        print(f"Отправитель: {from_id}")
        print(f"Значение: {value}")
        print(f"ID сообщения: {conversation_message_id}")

    elif signal == 'sendMySignal':
        chat = signal['chat']
        from_id = signal['from_id']
        value = signal['value']
        conversation_message_id = signal['conversation_message_id']
        # Обработка сигнала sendMySignal
        print(f"Отправка моего сигнала в чат {chat}")
        print(f"Отправитель: {from_id}")
        print(f"Значение: {value}")
        print(f"ID сообщения: {conversation_message_id}")

    elif signal == 'hireApi':
        chat = signal['chat']
        price = signal['price']
        # Обработка сигнала hireApi
        print(f"Найм API в чате {chat}")
        print(f"Цена: {price}")

    elif signal == 'meetChatDuty':
        chat = signal['chat']
        duty_id = signal['duty_id']
        # Обработка сигнала meetChatDuty
        print(f"Встреча обязанности в чате {chat}")
        print(f"ID обязанности: {duty_id}")

    elif signal == 'messages.deleteByType':
        chat = signal['chat']
        message_type = signal['type']
        local_id = signal['local_id']
        offset = signal['offset']
        is_spam = signal['is_spam']
        silent = signal.get('silent')
        admin_ids = signal.get('admin_ids')
        time = signal.get('time')
        amount = signal.get('amount')
        # Обработка сигнала messages.deleteByType
        print(f"Удаление сообщений определенного типа в чате {chat}")
        print(f"Тип сообщений: {message_type}")
        print(f"Локальный ID сообщения: {local_id}")
        print(f"Смещение: {offset}")
        if is_spam:
            print("Удаление помеченных как спам")
        if silent:
            print("Удаление без уведомлений")
        if admin_ids:
            print(f"ID администраторов: {admin_ids}")
        if time:
            print(f"Временной диапазон: {time}")
        if amount:
            print(f"Количество сообщений: {amount}")

    elif signal == 'groupbots.invited':
        group_id = signal['group_id']
        chat = signal.get('chat')
        # Обработка сигнала groupbots.invited
        if chat:
            print(f"Приглашение бота в чат {chat} группы {group_id}")
        else:
            print(f"Приглашение бота в группу {group_id}")

    elif signal == 'messages.recogniseAudioMessage':
        local_id = signal['local_id']
        chat = signal['chat']
        # Обработка сигнала messages.recogniseAudioMessage
        print(f"Распознавание аудиосообщения в чате {chat}. Локальный ID: {local_id}")

    else:
        print(f"Неизвестный метод сигнала: {signal}")
